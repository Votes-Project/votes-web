
"""An object with an ID."""
interface Node {
  id: ID!
  id: String!
}


"""A single todo item."""
type AuctionSettled implements Node {
  id: String!

  """Winner of auction"""
  winner: String!

  """ID of Votes token *"""
  tokenId: String!
}


"""A connection to a todo."""
type AuctionSettledConnection {

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AuctionSettledEdge]
}


"""An edge to a settledAuction."""
type AuctionSettledEdge {

  """The item at the end of the edge."""
  node: AuctionSettled

  """A cursor for use in pagination."""
  cursor: String!
}


"""Information about pagination in a connection."""
type PageInfo {

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {

  """The current time on the server, as a timestamp."""
  currentTime: Float

  """Fetches objects given their IDs."""
  nodes(ids: [ID!]!): [Node]!

  """Fetches an object given its ID."""
  node(id: ID!): Node
  auctionSettleds(skip: Int, first: Int, after: String, before: String, last: Int): AuctionSettledConnection
  auctionSettled(id: String!): AuctionSettled
}

